
/*** CREATE CLUB ***/
INSERT INTO Club VALUES (100, 'CLUB ABB', 'CLUB FULL NAME', '1999-05-10', ADVID, 4000 , PASSWORD); 

/*** REACTIVATE A MEMBER ***/
UPDATE MEMBER
SET Active = 1
where StudID = <<Student ID>> AND CLUBID = >>CLUB ID>>;

/*** PRINT ALL THE CLUBS OF A STUDENT ***/
SELECT S.StudID, SFname, SLname, CName, m.Semester, m.Year
FROM Student as S JOIN Member as m ON S.StudID = m.StudID
JOIN Club as c on m.ClubID = c.ClubID
where active = 1 AND SFname = 'AYMANE';

/*** PRINT ACTIVE MEMBERS OF A CLUB BY ITS NAME ***/
CREATE PROCEDURE PrintClubActiveMembers (thisClubName varchar(15))
    -> BEGIN
    -> SELECT s.studID, sfname, slname, sphone, m.semester, m.year, Cname, ClubID
    -> FROM Member AS m NATURAL JOIN Student AS s NATURAL JOIN Club as c
    -> WHERE cname = thisClubName AND m.Active = 1;
    -> END;

/*** COUNT OF NUMBER OF ACTIVE MEMBERS OF A CLUB ***/
SELECT COUNT(*) From member
    -> natural join club
    -> where cname = 'CSI';


/*** PRINT EVENTS IN A RANGE ORDERED ASC TIME ***/
DELIMITER $$
mysql> CREATE PROCEDURE PintEventsRanged (initDate date, End_date date)
    -> BEGIN
    -> SELECT * FROM EVENT
    -> WHERE AdvApproval = 1 and SAOApproval = 1
    -> AND EvtStart BETWEEN initDate AND End_date
    -> ORDER BY EvtStart ASC;
    -> END; $$

/*** PRINT ALL THE ACTIVE STUDENTS OF THE SEMSTER ***/
CREATE PROCEDURE PRINTALLACTIVEMEMBERS ()
    -> BEGIN
    -> SELECT s.StudID, sfname, slname, cname, c.clubID, m.semester, m.year
    -> from student as s natural join member as m natural join club as c
    -> where active = 1;
    -> END; $$


