CREATE DATABASE SAODB;

DROP TABLE Student IF EXISTS;
DROP TABLE Advisor IF EXISTS;
DROP TABLE Club IF EXISTS;
DROP TABLE Board IF EXISTS;
DROP TABLE Member IF EXISTS;
DROP TABLE OfficerSAO IF EXISTS;
DROP TABLE Location IF EXISTS;
DROP TABLE Event IF EXISTS;
DROP TABLE Meeting IF EXISTS;
DROP TABLE Attendance IF EXISTS;

CREATE TABLE Student (
	StudID INT, 
	SFname VARCHAR(20) NOT NULL UNIQUE, 
	SLname VARCHAR(20) NOT NULL UNIQUE, 
	SPhone INT NOT NULL, 
	SPass VARCHAR(20),
	PRIMARY KEY(StudID)
	); 

CREATE TABLE Advisor (
	AdvID INT, 
	AdvFname VARCHAR (20) NOT NULL UNIQUE, 
	AdvLname VARCHAR (20) NOT NULL UNIQUE, 
	AdvExt SMALLINT NOT NULL, 
	AdvPass VARCHAR (20),
	PRIMARY KEY(AdvID)
	);  

CREATE TABLE Club (
	ClubID INT,
	CName VARCHAR (30) NOT NULL, 
	CDescript VARCHAR (100) NOT NULL, 
	CcreationDate DATE NOT NULL, 
	AdvID INT,
	Balance DOUBLE NOT NULL DEFAULT 4000,
	CPass VARCHAR (20),
	PRIMARY KEY(ClubID),
	CONSTRAINT manages FOREIGN KEY(AdvID) REFERENCES Advisor(AdvID) ON UPDATE CASCADE ON DELETE SET NULL
	); 

CREATE TABLE Board (
	StudID INT,
	ClubID INT, 
	Semester CHAR(3), 
	Year INT NOT NULL,
	ranking INT NOT NULL, 
	PRIMARY KEY (StudID , ClubID, Semester, Year),
	CONSTRAINT is_in FOREIGN KEY (StudID) REFERENCES Student(StudID) ON UPDATE CASCADE ON DELETE NO ACTION,
	CONSTRAINT is_running FOREIGN KEY (ClubID) REFERENCES Club(ClubID) ON UPDATE CASCADE ON DELETE NO ACTION
	);

CREATE TABLE Member (
	StudID INT, 
	ClubId INT, 
	Semester CHAR(3) NOT NULL,
	Year SMALLINT NOT NULL, 
	active TINYINT NOT NULL DEFAULT 0,
	PRIMARY KEY (StudID, ClubId),
	CONSTRAINT belongs_to FOREIGN KEY (StudID) REFERENCES Student (StudID) ON UPDATE CASCADE ON DELETE NO ACTION,
	CONSTRAINT represents FOREIGN KEY (ClubID) REFERENCES Club(ClubID) ON UPDATE CASCADE ON DELETE NO ACTION
	); 

CREATE TABLE OfficerSAO ( 
	SAOID INT, 
	SAOFname VARCHAR (20) NOT NULL, 
	SAOLname VARCHAR (20) NOT NULL, 
	SAOExt SMALLINT NOT NULL, 
	SAOPass VARCHAR (20),
	PRIMARY KEY(SAOID)
	);

CREATE TABLE Location( 
	LocID VARCHAR (10), 
	LocName VARCHAR (20), 
	LocRoom SMALLINT, 
	LocBldg VARCHAR (5),
	PRIMARY KEY(LocID)
); 


CREATE TABLE Event (
	EvtID INT, 
	EvtName VARCHAR (40) NOT NULL, 
	EvtDescript VARCHAR (200) NOT NULL, 
	EvtBudget DOUBLE NOT NULL DEFAULT 0.00, 
	EvtLocation VARCHAR(10), 
	EvtStart DATETIME NOT NULL, 
	EvtEnd DATETIME NOT NULL, 
	ClubID INT,
	AdvApproval TINYINT DEFAULT 0,
	SAOApproval TINYINT DEFAULT 0,
	PRIMARY KEY(EvtID),
	CONSTRAINT takes_place_in FOREIGN KEY (EvtLocation) REFERENCES Location (LocID) ON UPDATE CASCADE ON DELETE SET NULL,
	CONSTRAINT created_by FOREIGN KEY (ClubID) REFERENCES Club (ClubID) ON UPDATE CASCADE ON DELETE NO ACTION
	); 


CREATE TABLE Meeting (
	MNbr INT NOT NULL, 
	ClubID INT NOT NULL, 
	MDateTime DATETIME NOT NULL, 
	MLocation VARCHAR(10), 
	MMinutes VARCHAR(200), 
	PRIMARY KEY (MNbr, ClubID),77
	CONSTRAINT will_meet_in FOREIGN KEY (MLocation) REFERENCES Location(locID) ON UPDATE CASCADE ON DELETE SET NULL
	); 

CREATE TABLE Attendance (
	MNbr INT NOT NULL,
	ClubID INT,
	StudID INT,
	Semester CHAR(3) NOT NULL,
	Year SMALLINT NOT NULL,
	PRIMARY KEY (MNbr, ClubID, StudID),
	CONSTRAINT is_present FOREIGN KEY (StudID) REFERENCES Member(StudID) ON UPDATE CASCADE ON DELETE NO ACTION,
	CONSTRAINT part_of FOREIGN KEY (ClubID) REFERENCES Member(ClubID) ON UPDATE CASCADE ON DELETE NO ACTION,
	CONSTRAINT comes_from FOREIGN KEY(MNbr, ClubID) REFERENCES Meeting(MNbr, ClubID) ON UPDATE CASCADE ON DELETE CASCADE
	); 